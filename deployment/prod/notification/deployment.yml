---
apiVersion: v1
kind: Service
metadata:
  name: notifications
  namespace: notifications
  annotations:
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-path: "/api/notifications-internal/v1/health"
    alb.ingress.kubernetes.io/healthcheck-port: '80'
    alb.ingress.kubernetes.io/successCodes: "200"
  labels:
    app: notifications
spec:
  selector:
    app: notifications
  ports:
    - name: client
      port: 80
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: notifications-configs
  namespace: notifications
data:
  ################
  NOTIFICATIONS_SERVER_PORT: ":80"
  NOTIFICATIONS_STAGE: "prod"
  LOGGER_ENV: "prod"
  ################
  JETSTREAM_NATS_URL: "nats://nats1.my.cloud:4222,nats://nats2.my.cloud:4222,nats://nats3.my.cloud:4222"
  JETSTREAM_NATS_CLIENTNAME: "notifications"
  ################
  SENTRY_SERVERNAME: "notifications-service"
  SENTRY_ENVIRONMENT: "Prod"
  SENTRY_STAGE: "Prod"
  ################
  REDIS_URL: "redis-1.my.cloud"
  REDIS_PASSWORD: ""
  REDIS_CLUSTER: "true"
  ################
  FILEMANAGER_STORAGEURL: "https://static.cloud/"
  FILEMANAGER_DIRECTORY: "news/"
  ################
  EMAIL_HOST: "smtp.eu.my.org"
  EMAIL_PORT: "587"
  EMAIL_FROM: "noreply@my.tj"
  ################
  SMS_URL: "https://sms.my.net"
  ################
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: notifications
  namespace: notifications
  labels:
    app: notifications
spec:
  replicas: 2
  selector:
    matchLabels:
      app: notifications
  template:
    metadata:
      labels:
        app: notifications
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
      volumes:
        - name: config-volume
          configMap:
            name: firebase-config

      containers:
        - name: notifications
          image: "{{IMAGE}}"
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "512Mi"
              cpu: "100m"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80

          volumeMounts:
            - name: config-volume
              mountPath: /app/firebase.json
              subPath: firebase.json

          envFrom:
            - configMapRef:
                name: notifications-configs
            - secretRef:
                name: notifications-secrets

          env:
            - name: GOMEMLIMIT
              valueFrom:
                resourceFieldRef:
                  resource: limits.memory
            - name: PODNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name

          livenessProbe:
            httpGet:
              path: /api/notifications-internal/v1/health
              port: 80
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 15
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /api/notifications-internal/v1/health
              port: 80
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 1
